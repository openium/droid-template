apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'
//apply plugin: 'fr.openium.resgen'
apply plugin: 'fr.openium.version'
//apply plugin: 'io.fabric'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    defaultConfig {
        applicationId "fr.openium.template"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode openiumVersion.versionCode
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

//    signingConfigs {
//        debug {
//            storeFile file("keys/debug.keystore")
//        }
//
//        release {
//            storeFile file("keys/****.keystore")
//            storePassword "*****"
//            keyAlias "***"
//            keyPassword "******"
//        }
//    }

    buildTypes {
        def BOOLEAN = "boolean"
        def TRUE = "true"
        def FALSE = "false"
        def CONTINUOUS_INTEGRATION = "CONTINUOUS_INTEGRATION"
        debug {
            minifyEnabled false
            ext.enableCrashlytics = false
            ext.alwaysUpdateBuildId = false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            versionNameSuffix '-debug'
            applicationIdSuffix '.debug'
            buildConfigField BOOLEAN, CONTINUOUS_INTEGRATION, Boolean.toString(project.hasProperty('continuousIntegration'))
//            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField BOOLEAN, CONTINUOUS_INTEGRATION, FALSE
//            signingConfig signingConfigs.release
        }
    }


    defaultConfig {
        ndk {
            abiFilters "arm64-v8a", "armeabi-v7a", "x86"
        }
    }
}

//resgen {
//    twine {
//        langs = "en fr" // Mandatory if multi lang
//        //suffix = "-gen"
//    }
//}

repositories {
    mavenCentral()
    google()
    maven { url 'http://maven.openium.fr' }
    maven { url 'https://maven.fabric.io/public' }
//    flatDir { dirs 'libs' }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    compile 'com.android.support:appcompat-v7:25.4.0'
    compile 'com.android.support:design:25.4.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    compile 'io.reactivex:rxjava:1.3.0'
    compile 'io.reactivex:rxandroid:1.2.1'

    compile 'com.google.code.gson:gson:2.8.1'

    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.3.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.8.0'

    compile 'com.auth0.android:jwtdecode:1.1.0'

    compile 'uk.co.chrisjenx:calligraphy:2.3.0'

    compile 'com.jakewharton.timber:timber:4.5.1'
    compile 'com.github.salomonbrys.kodein:kodein:4.1.0'
    compile 'com.github.salomonbrys.kodein:kodein-android:4.1.0'

    debugCompile 'com.squareup.retrofit2:retrofit-mock:2.3.0'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
    androidTestCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'


    compile('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true;
    }

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
}
